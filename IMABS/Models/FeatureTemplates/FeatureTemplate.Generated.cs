//--------------------------------------------------------------------------------------------------
// <auto-generated>
//
//     This code was generated by code generator tool.
//
//     To customize the code use your own partial class. For more info about how to use and customize
//     the generated code see the documentation at https://docs.xperience.io/.
//
// </auto-generated>
//--------------------------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using CMS;
using CMS.Base;
using CMS.Helpers;
using CMS.DataEngine;
using CMS.DocumentEngine;
using CMS.DocumentEngine.Types.IMABS;

[assembly: RegisterDocumentType(FeatureTemplate.CLASS_NAME, typeof(FeatureTemplate))]

namespace CMS.DocumentEngine.Types.IMABS
{
	/// <summary>
	/// Represents a content item of type FeatureTemplate.
	/// </summary>
	public partial class FeatureTemplate : TreeNode
	{
		#region "Constants and variables"

		/// <summary>
		/// The name of the data class.
		/// </summary>
		public const string CLASS_NAME = "IMABS.FeatureTemplate";


		/// <summary>
		/// The instance of the class that provides extended API for working with FeatureTemplate fields.
		/// </summary>
		private readonly FeatureTemplateFields mFields;

		#endregion


		#region "Properties"

		/// <summary>
		/// AboutID.
		/// </summary>
		[DatabaseIDField]
		public int FeatureTemplateID
		{
			get
			{
				return ValidationHelper.GetInteger(GetValue("FeatureTemplateID"), 0);
			}
			set
			{
				SetValue("FeatureTemplateID", value);
			}
		}


		/// <summary>
		/// Name.
		/// </summary>
		[DatabaseField]
		public string Name
		{
			get
			{
				return ValidationHelper.GetString(GetValue("Name"), @"");
			}
			set
			{
				SetValue("Name", value);
			}
		}


		/// <summary>
		/// Description.
		/// </summary>
		[DatabaseField]
		public string Description
		{
			get
			{
				return ValidationHelper.GetString(GetValue("Description"), @"");
			}
			set
			{
				SetValue("Description", value);
			}
		}


		/// <summary>
		/// Feature by.
		/// </summary>
		[DatabaseField]
		public string FeatureBy
		{
			get
			{
				return ValidationHelper.GetString(GetValue("FeatureBy"), @"");
			}
			set
			{
				SetValue("FeatureBy", value);
			}
		}


		/// <summary>
		/// Page content.
		/// </summary>
		[DatabaseField]
		public string PageContent
		{
			get
			{
				return ValidationHelper.GetString(GetValue("PageContent"), @"");
			}
			set
			{
				SetValue("PageContent", value);
			}
		}


		/// <summary>
		///  Blockquote.
		/// </summary>
		[DatabaseField]
		public string Blockquote
		{
			get
			{
				return ValidationHelper.GetString(GetValue("Blockquote"), @"");
			}
			set
			{
				SetValue("Blockquote", value);
			}
		}


		/// <summary>
		/// Brand title.
		/// </summary>
		[DatabaseField]
		public string BrandTitle
		{
			get
			{
				return ValidationHelper.GetString(GetValue("BrandTitle"), @"");
			}
			set
			{
				SetValue("BrandTitle", value);
			}
		}


		/// <summary>
		/// Select Brands.
		/// </summary>
		[DatabaseField]
		public string Selector
		{
			get
			{
				return ValidationHelper.GetString(GetValue("Selector"), @"");
			}
			set
			{
				SetValue("Selector", value);
			}
		}


		/// <summary>
		/// Enable CTA banner?.
		/// </summary>
		[DatabaseField]
		public bool EnableCallToTactionBanner
		{
			get
			{
				return ValidationHelper.GetBoolean(GetValue("EnableCallToTactionBanner"), false);
			}
			set
			{
				SetValue("EnableCallToTactionBanner", value);
			}
		}


		/// <summary>
		/// Enable promotions banner?.
		/// </summary>
		[DatabaseField]
		public bool EnablePromotionsBanner
		{
			get
			{
				return ValidationHelper.GetBoolean(GetValue("EnablePromotionsBanner"), false);
			}
			set
			{
				SetValue("EnablePromotionsBanner", value);
			}
		}


		/// <summary>
		/// Enable Breadcrumb?.
		/// </summary>
		[DatabaseField]
		public bool EnableBreadcrumb
		{
			get
			{
				return ValidationHelper.GetBoolean(GetValue("EnableBreadcrumb"), false);
			}
			set
			{
				SetValue("EnableBreadcrumb", value);
			}
		}


		/// <summary>
		/// Show in header menu.
		/// </summary>
		[DatabaseField]
		public bool AllowToViewInHeader
		{
			get
			{
				return ValidationHelper.GetBoolean(GetValue("AllowToViewInHeader"), true);
			}
			set
			{
				SetValue("AllowToViewInHeader", value);
			}
		}


		/// <summary>
		/// Show in footer menu.
		/// </summary>
		[DatabaseField]
		public bool AllowToViewInFooter
		{
			get
			{
				return ValidationHelper.GetBoolean(GetValue("AllowToViewInFooter"), true);
			}
			set
			{
				SetValue("AllowToViewInFooter", value);
			}
		}


		/// <summary>
		/// Gets an object that provides extended API for working with FeatureTemplate fields.
		/// </summary>
		[RegisterProperty]
		public FeatureTemplateFields Fields
		{
			get
			{
				return mFields;
			}
		}


		/// <summary>
		/// Provides extended API for working with FeatureTemplate fields.
		/// </summary>
		[RegisterAllProperties]
		public partial class FeatureTemplateFields : AbstractHierarchicalObject<FeatureTemplateFields>
		{
			/// <summary>
			/// The content item of type FeatureTemplate that is a target of the extended API.
			/// </summary>
			private readonly FeatureTemplate mInstance;


			/// <summary>
			/// Initializes a new instance of the <see cref="FeatureTemplateFields" /> class with the specified content item of type FeatureTemplate.
			/// </summary>
			/// <param name="instance">The content item of type FeatureTemplate that is a target of the extended API.</param>
			public FeatureTemplateFields(FeatureTemplate instance)
			{
				mInstance = instance;
			}


			/// <summary>
			/// AboutID.
			/// </summary>
			public int ID
			{
				get
				{
					return mInstance.FeatureTemplateID;
				}
				set
				{
					mInstance.FeatureTemplateID = value;
				}
			}


			/// <summary>
			/// Name.
			/// </summary>
			public string Name
			{
				get
				{
					return mInstance.Name;
				}
				set
				{
					mInstance.Name = value;
				}
			}


			/// <summary>
			/// Description.
			/// </summary>
			public string Description
			{
				get
				{
					return mInstance.Description;
				}
				set
				{
					mInstance.Description = value;
				}
			}


			/// <summary>
			/// Feature by.
			/// </summary>
			public string FeatureBy
			{
				get
				{
					return mInstance.FeatureBy;
				}
				set
				{
					mInstance.FeatureBy = value;
				}
			}


			/// <summary>
			/// Page content.
			/// </summary>
			public string PageContent
			{
				get
				{
					return mInstance.PageContent;
				}
				set
				{
					mInstance.PageContent = value;
				}
			}


			/// <summary>
			///  Blockquote.
			/// </summary>
			public string Blockquote
			{
				get
				{
					return mInstance.Blockquote;
				}
				set
				{
					mInstance.Blockquote = value;
				}
			}


			/// <summary>
			/// Brand title.
			/// </summary>
			public string BrandTitle
			{
				get
				{
					return mInstance.BrandTitle;
				}
				set
				{
					mInstance.BrandTitle = value;
				}
			}


			/// <summary>
			/// Select Brands.
			/// </summary>
			public string Selector
			{
				get
				{
					return mInstance.Selector;
				}
				set
				{
					mInstance.Selector = value;
				}
			}


			/// <summary>
			/// Enable CTA banner?.
			/// </summary>
			public bool EnableCallToTactionBanner
			{
				get
				{
					return mInstance.EnableCallToTactionBanner;
				}
				set
				{
					mInstance.EnableCallToTactionBanner = value;
				}
			}


			/// <summary>
			/// Enable promotions banner?.
			/// </summary>
			public bool EnablePromotionsBanner
			{
				get
				{
					return mInstance.EnablePromotionsBanner;
				}
				set
				{
					mInstance.EnablePromotionsBanner = value;
				}
			}


			/// <summary>
			/// Enable Breadcrumb?.
			/// </summary>
			public bool EnableBreadcrumb
			{
				get
				{
					return mInstance.EnableBreadcrumb;
				}
				set
				{
					mInstance.EnableBreadcrumb = value;
				}
			}


			/// <summary>
			/// Show in header menu.
			/// </summary>
			public bool AllowToViewInHeader
			{
				get
				{
					return mInstance.AllowToViewInHeader;
				}
				set
				{
					mInstance.AllowToViewInHeader = value;
				}
			}


			/// <summary>
			/// Show in footer menu.
			/// </summary>
			public bool AllowToViewInFooter
			{
				get
				{
					return mInstance.AllowToViewInFooter;
				}
				set
				{
					mInstance.AllowToViewInFooter = value;
				}
			}
		}

		#endregion


		#region "Constructors"

		/// <summary>
		/// Initializes a new instance of the <see cref="FeatureTemplate" /> class.
		/// </summary>
		public FeatureTemplate() : base(CLASS_NAME)
		{
			mFields = new FeatureTemplateFields(this);
		}

		#endregion
	}
}