//--------------------------------------------------------------------------------------------------
// <auto-generated>
//
//     This code was generated by code generator tool.
//
//     To customize the code use your own partial class. For more info about how to use and customize
//     the generated code see the documentation at http://docs.kentico.com.
//
// </auto-generated>
//--------------------------------------------------------------------------------------------------

using System;
using System.Collections.Generic;

using CMS;
using CMS.Base;
using CMS.Helpers;
using CMS.DataEngine;
using CMS.DocumentEngine.Types.IMABS;
using CMS.DocumentEngine;

[assembly: RegisterDocumentType(ProductCategoryDetail.CLASS_NAME, typeof(ProductCategoryDetail))]

namespace CMS.DocumentEngine.Types.IMABS
{
	/// <summary>
	/// Represents a content item of type ProductCategoryDetail.
	/// </summary>
	public partial class ProductCategoryDetail : TreeNode
	{
		#region "Constants and variables"

		/// <summary>
		/// The name of the data class.
		/// </summary>
		public const string CLASS_NAME = "IMABS.ProductCategoryDetail";


		/// <summary>
		/// The instance of the class that provides extended API for working with ProductCategoryDetail fields.
		/// </summary>
		private readonly ProductCategoryDetailFields mFields;

		#endregion


		#region "Properties"

		/// <summary>
		/// CategoryIndexID.
		/// </summary>
		[DatabaseIDField]
		public int ProductCategoryDetailID
		{
			get
			{
				return ValidationHelper.GetInteger(GetValue("ProductCategoryDetailID"), 0);
			}
			set
			{
				SetValue("ProductCategoryDetailID", value);
			}
		}


		/// <summary>
		/// Name.
		/// </summary>
		[DatabaseField]
		public string Name
		{
			get
			{
				return ValidationHelper.GetString(GetValue("Name"), @"");
			}
			set
			{
				SetValue("Name", value);
			}
		}


		/// <summary>
		/// Image.
		/// </summary>
		[DatabaseField]
		public Guid Image
		{
			get
			{
				return ValidationHelper.GetGuid(GetValue("Image"), Guid.Empty);
			}
			set
			{
				SetValue("Image", value);
			}
		}


		/// <summary>
		/// Image Alt Text.
		/// </summary>
		[DatabaseField]
		public string ImageAltText
		{
			get
			{
				return ValidationHelper.GetString(GetValue("ImageAltText"), @"");
			}
			set
			{
				SetValue("ImageAltText", value);
			}
		}


		/// <summary>
		/// Redirection Url.
		/// </summary>
		[DatabaseField]
		public string RedirectionUrl
		{
			get
			{
				return ValidationHelper.GetString(GetValue("RedirectionUrl"), @"");
			}
			set
			{
				SetValue("RedirectionUrl", value);
			}
		}


		/// <summary>
		/// Select Brands.
		/// </summary>
		[DatabaseField]
		public string Selector
		{
			get
			{
				return ValidationHelper.GetString(GetValue("Selector"), @"");
			}
			set
			{
				SetValue("Selector", value);
			}
		}


		/// <summary>
		/// Enable CTA banner?.
		/// </summary>
		[DatabaseField]
		public bool EnableCallToTactionBanner
		{
			get
			{
				return ValidationHelper.GetBoolean(GetValue("EnableCallToTactionBanner"), false);
			}
			set
			{
				SetValue("EnableCallToTactionBanner", value);
			}
		}


		/// <summary>
		/// Enable promotions banner?.
		/// </summary>
		[DatabaseField]
		public bool EnablePromotionsBanner
		{
			get
			{
				return ValidationHelper.GetBoolean(GetValue("EnablePromotionsBanner"), false);
			}
			set
			{
				SetValue("EnablePromotionsBanner", value);
			}
		}


		/// <summary>
		/// Enable Breadcrumb?.
		/// </summary>
		[DatabaseField]
		public bool EnableBreadcrumb
		{
			get
			{
				return ValidationHelper.GetBoolean(GetValue("EnableBreadcrumb"), false);
			}
			set
			{
				SetValue("EnableBreadcrumb", value);
			}
		}


		/// <summary>
		/// Visible In Header?.
		/// </summary>
		[DatabaseField]
		public bool AllowToViewInHeader
		{
			get
			{
				return ValidationHelper.GetBoolean(GetValue("AllowToViewInHeader"), false);
			}
			set
			{
				SetValue("AllowToViewInHeader", value);
			}
		}


		/// <summary>
		/// Visible In Footer?.
		/// </summary>
		[DatabaseField]
		public bool AllowToViewInFooter
		{
			get
			{
				return ValidationHelper.GetBoolean(GetValue("AllowToViewInFooter"), false);
			}
			set
			{
				SetValue("AllowToViewInFooter", value);
			}
		}


		/// <summary>
		/// Gets an object that provides extended API for working with ProductCategoryDetail fields.
		/// </summary>
		[RegisterProperty]
		public ProductCategoryDetailFields Fields
		{
			get
			{
				return mFields;
			}
		}


		/// <summary>
		/// Provides extended API for working with ProductCategoryDetail fields.
		/// </summary>
		[RegisterAllProperties]
		public partial class ProductCategoryDetailFields : AbstractHierarchicalObject<ProductCategoryDetailFields>
		{
			/// <summary>
			/// The content item of type ProductCategoryDetail that is a target of the extended API.
			/// </summary>
			private readonly ProductCategoryDetail mInstance;


			/// <summary>
			/// Initializes a new instance of the <see cref="ProductCategoryDetailFields" /> class with the specified content item of type ProductCategoryDetail.
			/// </summary>
			/// <param name="instance">The content item of type ProductCategoryDetail that is a target of the extended API.</param>
			public ProductCategoryDetailFields(ProductCategoryDetail instance)
			{
				mInstance = instance;
			}


			/// <summary>
			/// CategoryIndexID.
			/// </summary>
			public int ID
			{
				get
				{
					return mInstance.ProductCategoryDetailID;
				}
				set
				{
					mInstance.ProductCategoryDetailID = value;
				}
			}


			/// <summary>
			/// Name.
			/// </summary>
			public string Name
			{
				get
				{
					return mInstance.Name;
				}
				set
				{
					mInstance.Name = value;
				}
			}


			/// <summary>
			/// Image.
			/// </summary>
			public DocumentAttachment Image
			{
				get
				{
					return mInstance.GetFieldDocumentAttachment("Image");
				}
			}


			/// <summary>
			/// Image Alt Text.
			/// </summary>
			public string ImageAltText
			{
				get
				{
					return mInstance.ImageAltText;
				}
				set
				{
					mInstance.ImageAltText = value;
				}
			}


			/// <summary>
			/// Redirection Url.
			/// </summary>
			public string RedirectionUrl
			{
				get
				{
					return mInstance.RedirectionUrl;
				}
				set
				{
					mInstance.RedirectionUrl = value;
				}
			}


			/// <summary>
			/// Select Brands.
			/// </summary>
			public string Selector
			{
				get
				{
					return mInstance.Selector;
				}
				set
				{
					mInstance.Selector = value;
				}
			}


			/// <summary>
			/// Enable CTA banner?.
			/// </summary>
			public bool EnableCallToTactionBanner
			{
				get
				{
					return mInstance.EnableCallToTactionBanner;
				}
				set
				{
					mInstance.EnableCallToTactionBanner = value;
				}
			}


			/// <summary>
			/// Enable promotions banner?.
			/// </summary>
			public bool EnablePromotionsBanner
			{
				get
				{
					return mInstance.EnablePromotionsBanner;
				}
				set
				{
					mInstance.EnablePromotionsBanner = value;
				}
			}


			/// <summary>
			/// Enable Breadcrumb?.
			/// </summary>
			public bool EnableBreadcrumb
			{
				get
				{
					return mInstance.EnableBreadcrumb;
				}
				set
				{
					mInstance.EnableBreadcrumb = value;
				}
			}


			/// <summary>
			/// Visible In Header?.
			/// </summary>
			public bool AllowToViewInHeader
			{
				get
				{
					return mInstance.AllowToViewInHeader;
				}
				set
				{
					mInstance.AllowToViewInHeader = value;
				}
			}


			/// <summary>
			/// Visible In Footer?.
			/// </summary>
			public bool AllowToViewInFooter
			{
				get
				{
					return mInstance.AllowToViewInFooter;
				}
				set
				{
					mInstance.AllowToViewInFooter = value;
				}
			}
		}

		#endregion


		#region "Constructors"

		/// <summary>
		/// Initializes a new instance of the <see cref="ProductCategoryDetail" /> class.
		/// </summary>
		public ProductCategoryDetail() : base(CLASS_NAME)
		{
			mFields = new ProductCategoryDetailFields(this);
		}

		#endregion
	}
}