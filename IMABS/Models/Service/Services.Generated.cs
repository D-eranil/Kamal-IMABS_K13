//--------------------------------------------------------------------------------------------------
// <auto-generated>
//
//     This code was generated by code generator tool.
//
//     To customize the code use your own partial class. For more info about how to use and customize
//     the generated code see the documentation at http://docs.kentico.com.
//
// </auto-generated>
//--------------------------------------------------------------------------------------------------

using System;
using System.Collections.Generic;

using CMS;
using CMS.Base;
using CMS.Helpers;
using CMS.DataEngine;
using CMS.DocumentEngine.Types.IMABS;
using CMS.DocumentEngine;

[assembly: RegisterDocumentType(Services.CLASS_NAME, typeof(Services))]

namespace CMS.DocumentEngine.Types.IMABS
{
	/// <summary>
	/// Represents a content item of type Services.
	/// </summary>
	public partial class Services : TreeNode
	{
		#region "Constants and variables"

		/// <summary>
		/// The name of the data class.
		/// </summary>
		public const string CLASS_NAME = "IMABS.Services";


		/// <summary>
		/// The instance of the class that provides extended API for working with Services fields.
		/// </summary>
		private readonly ServicesFields mFields;

		#endregion


		#region "Properties"

		/// <summary>
		/// AboutID.
		/// </summary>
		[DatabaseIDField]
		public int ServicesID
		{
			get
			{
				return ValidationHelper.GetInteger(GetValue("ServicesID"), 0);
			}
			set
			{
				SetValue("ServicesID", value);
			}
		}


		/// <summary>
		/// Name.
		/// </summary>
		[DatabaseField]
		public string Name
		{
			get
			{
				return ValidationHelper.GetString(GetValue("Name"), @"");
			}
			set
			{
				SetValue("Name", value);
			}
		}


		/// <summary>
		/// Description.
		/// </summary>
		[DatabaseField]
		public string Description
		{
			get
			{
				return ValidationHelper.GetString(GetValue("Description"), @"");
			}
			set
			{
				SetValue("Description", value);
			}
		}


		/// <summary>
		/// Image.
		/// </summary>
		[DatabaseField]
		public Guid Image
		{
			get
			{
				return ValidationHelper.GetGuid(GetValue("Image"), Guid.Empty);
			}
			set
			{
				SetValue("Image", value);
			}
		}


		/// <summary>
		/// Desktop banner.
		/// </summary>
		[DatabaseField]
		public Guid DesktopBanner
		{
			get
			{
				return ValidationHelper.GetGuid(GetValue("DesktopBanner"), Guid.Empty);
			}
			set
			{
				SetValue("DesktopBanner", value);
			}
		}


		/// <summary>
		/// Tablet banner.
		/// </summary>
		[DatabaseField]
		public Guid TabletBanner
		{
			get
			{
				return ValidationHelper.GetGuid(GetValue("TabletBanner"), Guid.Empty);
			}
			set
			{
				SetValue("TabletBanner", value);
			}
		}


		/// <summary>
		/// Mobile banner.
		/// </summary>
		[DatabaseField]
		public Guid MobileBanner
		{
			get
			{
				return ValidationHelper.GetGuid(GetValue("MobileBanner"), Guid.Empty);
			}
			set
			{
				SetValue("MobileBanner", value);
			}
		}


		/// <summary>
		/// Select Brands.
		/// </summary>
		[DatabaseField]
		public string Selector
		{
			get
			{
				return ValidationHelper.GetString(GetValue("Selector"), @"");
			}
			set
			{
				SetValue("Selector", value);
			}
		}


		/// <summary>
		/// Service panel text.
		/// </summary>
		[DatabaseField]
		public string ServicePanelText
		{
			get
			{
				return ValidationHelper.GetString(GetValue("ServicePanelText"), @"");
			}
			set
			{
				SetValue("ServicePanelText", value);
			}
		}


		/// <summary>
		/// Link 1 text.
		/// </summary>
		[DatabaseField]
		public string Link1Text
		{
			get
			{
				return ValidationHelper.GetString(GetValue("Link1Text"), @"");
			}
			set
			{
				SetValue("Link1Text", value);
			}
		}


		/// <summary>
		/// Link 1 url.
		/// </summary>
		[DatabaseField]
		public string Link1Url
		{
			get
			{
				return ValidationHelper.GetString(GetValue("Link1Url"), @"");
			}
			set
			{
				SetValue("Link1Url", value);
			}
		}


		/// <summary>
		/// Link 2 text.
		/// </summary>
		[DatabaseField]
		public string Link2Text
		{
			get
			{
				return ValidationHelper.GetString(GetValue("Link2Text"), @"");
			}
			set
			{
				SetValue("Link2Text", value);
			}
		}


		/// <summary>
		/// Link 2 url.
		/// </summary>
		[DatabaseField]
		public string Link2Url
		{
			get
			{
				return ValidationHelper.GetString(GetValue("Link2Url"), @"");
			}
			set
			{
				SetValue("Link2Url", value);
			}
		}


		/// <summary>
		/// ArrowImage.
		/// </summary>
		[DatabaseField]
		public Guid ArrowImage
		{
			get
			{
				return ValidationHelper.GetGuid(GetValue("ArrowImage"), Guid.Empty);
			}
			set
			{
				SetValue("ArrowImage", value);
			}
		}


		/// <summary>
		/// Enable Breadcrumb?.
		/// </summary>
		[DatabaseField]
		public bool EnableBreadcrumb
		{
			get
			{
				return ValidationHelper.GetBoolean(GetValue("EnableBreadcrumb"), true);
			}
			set
			{
				SetValue("EnableBreadcrumb", value);
			}
		}


		/// <summary>
		/// Show in header menu.
		/// </summary>
		[DatabaseField]
		public bool AllowToViewInHeader
		{
			get
			{
				return ValidationHelper.GetBoolean(GetValue("AllowToViewInHeader"), true);
			}
			set
			{
				SetValue("AllowToViewInHeader", value);
			}
		}


		/// <summary>
		/// Show in footer menu.
		/// </summary>
		[DatabaseField]
		public bool AllowToViewInFooter
		{
			get
			{
				return ValidationHelper.GetBoolean(GetValue("AllowToViewInFooter"), true);
			}
			set
			{
				SetValue("AllowToViewInFooter", value);
			}
		}


		/// <summary>
		/// Gets an object that provides extended API for working with Services fields.
		/// </summary>
		[RegisterProperty]
		public ServicesFields Fields
		{
			get
			{
				return mFields;
			}
		}


		/// <summary>
		/// Provides extended API for working with Services fields.
		/// </summary>
		[RegisterAllProperties]
		public partial class ServicesFields : AbstractHierarchicalObject<ServicesFields>
		{
			/// <summary>
			/// The content item of type Services that is a target of the extended API.
			/// </summary>
			private readonly Services mInstance;


			/// <summary>
			/// Initializes a new instance of the <see cref="ServicesFields" /> class with the specified content item of type Services.
			/// </summary>
			/// <param name="instance">The content item of type Services that is a target of the extended API.</param>
			public ServicesFields(Services instance)
			{
				mInstance = instance;
			}


			/// <summary>
			/// AboutID.
			/// </summary>
			public int ID
			{
				get
				{
					return mInstance.ServicesID;
				}
				set
				{
					mInstance.ServicesID = value;
				}
			}


			/// <summary>
			/// Name.
			/// </summary>
			public string Name
			{
				get
				{
					return mInstance.Name;
				}
				set
				{
					mInstance.Name = value;
				}
			}


			/// <summary>
			/// Description.
			/// </summary>
			public string Description
			{
				get
				{
					return mInstance.Description;
				}
				set
				{
					mInstance.Description = value;
				}
			}


			/// <summary>
			/// Image.
			/// </summary>
			public DocumentAttachment Image
			{
				get
				{
					return mInstance.GetFieldDocumentAttachment("Image");
				}
			}


			/// <summary>
			/// Desktop banner.
			/// </summary>
			public DocumentAttachment DesktopBanner
			{
				get
				{
					return mInstance.GetFieldDocumentAttachment("DesktopBanner");
				}
			}


			/// <summary>
			/// Tablet banner.
			/// </summary>
			public DocumentAttachment TabletBanner
			{
				get
				{
					return mInstance.GetFieldDocumentAttachment("TabletBanner");
				}
			}


			/// <summary>
			/// Mobile banner.
			/// </summary>
			public DocumentAttachment MobileBanner
			{
				get
				{
					return mInstance.GetFieldDocumentAttachment("MobileBanner");
				}
			}


			/// <summary>
			/// Select Brands.
			/// </summary>
			public string Selector
			{
				get
				{
					return mInstance.Selector;
				}
				set
				{
					mInstance.Selector = value;
				}
			}


			/// <summary>
			/// Service panel text.
			/// </summary>
			public string ServicePanelText
			{
				get
				{
					return mInstance.ServicePanelText;
				}
				set
				{
					mInstance.ServicePanelText = value;
				}
			}


			/// <summary>
			/// Link 1 text.
			/// </summary>
			public string Link1Text
			{
				get
				{
					return mInstance.Link1Text;
				}
				set
				{
					mInstance.Link1Text = value;
				}
			}


			/// <summary>
			/// Link 1 url.
			/// </summary>
			public string Link1Url
			{
				get
				{
					return mInstance.Link1Url;
				}
				set
				{
					mInstance.Link1Url = value;
				}
			}


			/// <summary>
			/// Link 2 text.
			/// </summary>
			public string Link2Text
			{
				get
				{
					return mInstance.Link2Text;
				}
				set
				{
					mInstance.Link2Text = value;
				}
			}


			/// <summary>
			/// Link 2 url.
			/// </summary>
			public string Link2Url
			{
				get
				{
					return mInstance.Link2Url;
				}
				set
				{
					mInstance.Link2Url = value;
				}
			}


			/// <summary>
			/// ArrowImage.
			/// </summary>
			public DocumentAttachment ArrowImage
			{
				get
				{
					return mInstance.GetFieldDocumentAttachment("ArrowImage");
				}
			}


			/// <summary>
			/// Enable Breadcrumb?.
			/// </summary>
			public bool EnableBreadcrumb
			{
				get
				{
					return mInstance.EnableBreadcrumb;
				}
				set
				{
					mInstance.EnableBreadcrumb = value;
				}
			}


			/// <summary>
			/// Show in header menu.
			/// </summary>
			public bool AllowToViewInHeader
			{
				get
				{
					return mInstance.AllowToViewInHeader;
				}
				set
				{
					mInstance.AllowToViewInHeader = value;
				}
			}


			/// <summary>
			/// Show in footer menu.
			/// </summary>
			public bool AllowToViewInFooter
			{
				get
				{
					return mInstance.AllowToViewInFooter;
				}
				set
				{
					mInstance.AllowToViewInFooter = value;
				}
			}
		}

		#endregion


		#region "Constructors"

		/// <summary>
		/// Initializes a new instance of the <see cref="Services" /> class.
		/// </summary>
		public Services() : base(CLASS_NAME)
		{
			mFields = new ServicesFields(this);
		}

		#endregion
	}
}