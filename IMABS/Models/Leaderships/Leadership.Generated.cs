//--------------------------------------------------------------------------------------------------
// <auto-generated>
//
//     This code was generated by code generator tool.
//
//     To customize the code use your own partial class. For more info about how to use and customize
//     the generated code see the documentation at https://docs.xperience.io/.
//
// </auto-generated>
//--------------------------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using CMS;
using CMS.Base;
using CMS.Helpers;
using CMS.DataEngine;
using CMS.DocumentEngine;
using CMS.DocumentEngine.Types.IMABS;

[assembly: RegisterDocumentType(Leadership.CLASS_NAME, typeof(Leadership))]

namespace CMS.DocumentEngine.Types.IMABS
{
	/// <summary>
	/// Represents a content item of type Leadership.
	/// </summary>
	public partial class Leadership : TreeNode
	{
		#region "Constants and variables"

		/// <summary>
		/// The name of the data class.
		/// </summary>
		public const string CLASS_NAME = "IMABS.Leadership";


		/// <summary>
		/// The instance of the class that provides extended API for working with Leadership fields.
		/// </summary>
		private readonly LeadershipFields mFields;

		#endregion


		#region "Properties"

		/// <summary>
		/// LeadershipID.
		/// </summary>
		[DatabaseIDField]
		public int LeadershipID
		{
			get
			{
				return ValidationHelper.GetInteger(GetValue("LeadershipID"), 0);
			}
			set
			{
				SetValue("LeadershipID", value);
			}
		}


		/// <summary>
		/// Leadership page name.
		/// </summary>
		[DatabaseField]
		public string LeadershipPageName
		{
			get
			{
				return ValidationHelper.GetString(GetValue("LeadershipPageName"), @"");
			}
			set
			{
				SetValue("LeadershipPageName", value);
			}
		}


		/// <summary>
		/// Page heading.
		/// </summary>
		[DatabaseField]
		public string PageHeading
		{
			get
			{
				return ValidationHelper.GetString(GetValue("PageHeading"), @"");
			}
			set
			{
				SetValue("PageHeading", value);
			}
		}


		/// <summary>
		/// Page sub heading.
		/// </summary>
		[DatabaseField]
		public string PageSubHeading
		{
			get
			{
				return ValidationHelper.GetString(GetValue("PageSubHeading"), @"");
			}
			set
			{
				SetValue("PageSubHeading", value);
			}
		}


		/// <summary>
		/// Enable CTA banner?.
		/// </summary>
		[DatabaseField]
		public bool EnableCallToTactionBanner
		{
			get
			{
				return ValidationHelper.GetBoolean(GetValue("EnableCallToTactionBanner"), false);
			}
			set
			{
				SetValue("EnableCallToTactionBanner", value);
			}
		}


		/// <summary>
		/// Enable promotions banner?.
		/// </summary>
		[DatabaseField]
		public bool EnablePromotionsBanner
		{
			get
			{
				return ValidationHelper.GetBoolean(GetValue("EnablePromotionsBanner"), false);
			}
			set
			{
				SetValue("EnablePromotionsBanner", value);
			}
		}


		/// <summary>
		/// Enable Breadcrumb?.
		/// </summary>
		[DatabaseField]
		public bool EnableBreadcrumb
		{
			get
			{
				return ValidationHelper.GetBoolean(GetValue("EnableBreadcrumb"), false);
			}
			set
			{
				SetValue("EnableBreadcrumb", value);
			}
		}


		/// <summary>
		/// Show in header menu.
		/// </summary>
		[DatabaseField]
		public bool AllowToViewInHeader
		{
			get
			{
				return ValidationHelper.GetBoolean(GetValue("AllowToViewInHeader"), true);
			}
			set
			{
				SetValue("AllowToViewInHeader", value);
			}
		}


		/// <summary>
		/// Show in footer menu.
		/// </summary>
		[DatabaseField]
		public bool AllowToViewInFooter
		{
			get
			{
				return ValidationHelper.GetBoolean(GetValue("AllowToViewInFooter"), true);
			}
			set
			{
				SetValue("AllowToViewInFooter", value);
			}
		}


		/// <summary>
		/// Gets an object that provides extended API for working with Leadership fields.
		/// </summary>
		[RegisterProperty]
		public LeadershipFields Fields
		{
			get
			{
				return mFields;
			}
		}


		/// <summary>
		/// Provides extended API for working with Leadership fields.
		/// </summary>
		[RegisterAllProperties]
		public partial class LeadershipFields : AbstractHierarchicalObject<LeadershipFields>
		{
			/// <summary>
			/// The content item of type Leadership that is a target of the extended API.
			/// </summary>
			private readonly Leadership mInstance;


			/// <summary>
			/// Initializes a new instance of the <see cref="LeadershipFields" /> class with the specified content item of type Leadership.
			/// </summary>
			/// <param name="instance">The content item of type Leadership that is a target of the extended API.</param>
			public LeadershipFields(Leadership instance)
			{
				mInstance = instance;
			}


			/// <summary>
			/// LeadershipID.
			/// </summary>
			public int ID
			{
				get
				{
					return mInstance.LeadershipID;
				}
				set
				{
					mInstance.LeadershipID = value;
				}
			}


			/// <summary>
			/// Leadership page name.
			/// </summary>
			public string PageName
			{
				get
				{
					return mInstance.LeadershipPageName;
				}
				set
				{
					mInstance.LeadershipPageName = value;
				}
			}


			/// <summary>
			/// Page heading.
			/// </summary>
			public string PageHeading
			{
				get
				{
					return mInstance.PageHeading;
				}
				set
				{
					mInstance.PageHeading = value;
				}
			}


			/// <summary>
			/// Page sub heading.
			/// </summary>
			public string PageSubHeading
			{
				get
				{
					return mInstance.PageSubHeading;
				}
				set
				{
					mInstance.PageSubHeading = value;
				}
			}


			/// <summary>
			/// Enable CTA banner?.
			/// </summary>
			public bool EnableCallToTactionBanner
			{
				get
				{
					return mInstance.EnableCallToTactionBanner;
				}
				set
				{
					mInstance.EnableCallToTactionBanner = value;
				}
			}


			/// <summary>
			/// Enable promotions banner?.
			/// </summary>
			public bool EnablePromotionsBanner
			{
				get
				{
					return mInstance.EnablePromotionsBanner;
				}
				set
				{
					mInstance.EnablePromotionsBanner = value;
				}
			}


			/// <summary>
			/// Enable Breadcrumb?.
			/// </summary>
			public bool EnableBreadcrumb
			{
				get
				{
					return mInstance.EnableBreadcrumb;
				}
				set
				{
					mInstance.EnableBreadcrumb = value;
				}
			}


			/// <summary>
			/// Show in header menu.
			/// </summary>
			public bool AllowToViewInHeader
			{
				get
				{
					return mInstance.AllowToViewInHeader;
				}
				set
				{
					mInstance.AllowToViewInHeader = value;
				}
			}


			/// <summary>
			/// Show in footer menu.
			/// </summary>
			public bool AllowToViewInFooter
			{
				get
				{
					return mInstance.AllowToViewInFooter;
				}
				set
				{
					mInstance.AllowToViewInFooter = value;
				}
			}
		}

		#endregion


		#region "Constructors"

		/// <summary>
		/// Initializes a new instance of the <see cref="Leadership" /> class.
		/// </summary>
		public Leadership() : base(CLASS_NAME)
		{
			mFields = new LeadershipFields(this);
		}

		#endregion
	}
}