//--------------------------------------------------------------------------------------------------
// <auto-generated>
//
//     This code was generated by code generator tool.
//
//     To customize the code use your own partial class. For more info about how to use and customize
//     the generated code see the documentation at https://docs.xperience.io/.
//
// </auto-generated>
//--------------------------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using CMS;
using CMS.Base;
using CMS.Helpers;
using CMS.DataEngine;
using CMS.DocumentEngine;
using CMS.DocumentEngine.Types.IMABS;

[assembly: RegisterDocumentType(Openings.CLASS_NAME, typeof(Openings))]

namespace CMS.DocumentEngine.Types.IMABS
{
	/// <summary>
	/// Represents a content item of type Openings.
	/// </summary>
	public partial class Openings : TreeNode
	{
		#region "Constants and variables"

		/// <summary>
		/// The name of the data class.
		/// </summary>
		public const string CLASS_NAME = "IMABS.Openings";


		/// <summary>
		/// The instance of the class that provides extended API for working with Openings fields.
		/// </summary>
		private readonly OpeningsFields mFields;

		#endregion


		#region "Properties"

		/// <summary>
		/// OpeningsID.
		/// </summary>
		[DatabaseIDField]
		public int OpeningsID
		{
			get
			{
				return ValidationHelper.GetInteger(GetValue("OpeningsID"), 0);
			}
			set
			{
				SetValue("OpeningsID", value);
			}
		}


		/// <summary>
		/// Position Name.
		/// </summary>
		[DatabaseField]
		public string OpeningPosition
		{
			get
			{
				return ValidationHelper.GetString(GetValue("OpeningPosition"), @"");
			}
			set
			{
				SetValue("OpeningPosition", value);
			}
		}


		/// <summary>
		/// Location.
		/// </summary>
		[DatabaseField]
		public string OpeningLocation
		{
			get
			{
				return ValidationHelper.GetString(GetValue("OpeningLocation"), @"");
			}
			set
			{
				SetValue("OpeningLocation", value);
			}
		}


		/// <summary>
		/// Posted Date.
		/// </summary>
		[DatabaseField]
		public DateTime PostedDate
		{
			get
			{
				return ValidationHelper.GetDateTime(GetValue("PostedDate"), DateTimeHelper.ZERO_TIME);
			}
			set
			{
				SetValue("PostedDate", value);
			}
		}


		/// <summary>
		/// Apply URL.
		/// </summary>
		[DatabaseField]
		public string ApplyURL
		{
			get
			{
				return ValidationHelper.GetString(GetValue("ApplyURL"), @"");
			}
			set
			{
				SetValue("ApplyURL", value);
			}
		}


		/// <summary>
		/// Gets an object that provides extended API for working with Openings fields.
		/// </summary>
		[RegisterProperty]
		public OpeningsFields Fields
		{
			get
			{
				return mFields;
			}
		}


		/// <summary>
		/// Provides extended API for working with Openings fields.
		/// </summary>
		[RegisterAllProperties]
		public partial class OpeningsFields : AbstractHierarchicalObject<OpeningsFields>
		{
			/// <summary>
			/// The content item of type Openings that is a target of the extended API.
			/// </summary>
			private readonly Openings mInstance;


			/// <summary>
			/// Initializes a new instance of the <see cref="OpeningsFields" /> class with the specified content item of type Openings.
			/// </summary>
			/// <param name="instance">The content item of type Openings that is a target of the extended API.</param>
			public OpeningsFields(Openings instance)
			{
				mInstance = instance;
			}


			/// <summary>
			/// OpeningsID.
			/// </summary>
			public int ID
			{
				get
				{
					return mInstance.OpeningsID;
				}
				set
				{
					mInstance.OpeningsID = value;
				}
			}


			/// <summary>
			/// Position Name.
			/// </summary>
			public string OpeningPosition
			{
				get
				{
					return mInstance.OpeningPosition;
				}
				set
				{
					mInstance.OpeningPosition = value;
				}
			}


			/// <summary>
			/// Location.
			/// </summary>
			public string OpeningLocation
			{
				get
				{
					return mInstance.OpeningLocation;
				}
				set
				{
					mInstance.OpeningLocation = value;
				}
			}


			/// <summary>
			/// Posted Date.
			/// </summary>
			public DateTime PostedDate
			{
				get
				{
					return mInstance.PostedDate;
				}
				set
				{
					mInstance.PostedDate = value;
				}
			}


			/// <summary>
			/// Apply URL.
			/// </summary>
			public string ApplyURL
			{
				get
				{
					return mInstance.ApplyURL;
				}
				set
				{
					mInstance.ApplyURL = value;
				}
			}
		}

		#endregion


		#region "Constructors"

		/// <summary>
		/// Initializes a new instance of the <see cref="Openings" /> class.
		/// </summary>
		public Openings() : base(CLASS_NAME)
		{
			mFields = new OpeningsFields(this);
		}

		#endregion
	}
}