//--------------------------------------------------------------------------------------------------
// <auto-generated>
//
//     This code was generated by code generator tool.
//
//     To customize the code use your own partial class. For more info about how to use and customize
//     the generated code see the documentation at https://docs.xperience.io/.
//
// </auto-generated>
//--------------------------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using CMS;
using CMS.Base;
using CMS.Helpers;
using CMS.DataEngine;
using CMS.DocumentEngine;
using CMS.DocumentEngine.Types.IMABS;

[assembly: RegisterDocumentType(BlockquoteContent.CLASS_NAME, typeof(BlockquoteContent))]

namespace CMS.DocumentEngine.Types.IMABS
{
	/// <summary>
	/// Represents a content item of type BlockquoteContent.
	/// </summary>
	public partial class BlockquoteContent : TreeNode
	{
		#region "Constants and variables"

		/// <summary>
		/// The name of the data class.
		/// </summary>
		public const string CLASS_NAME = "IMABS.BlockquoteContent";


		/// <summary>
		/// The instance of the class that provides extended API for working with BlockquoteContent fields.
		/// </summary>
		private readonly BlockquoteContentFields mFields;

		#endregion


		#region "Properties"

		/// <summary>
		/// WhyIngramMicroID.
		/// </summary>
		[DatabaseIDField]
		public int BlockquoteContentID
		{
			get
			{
				return ValidationHelper.GetInteger(GetValue("BlockquoteContentID"), 0);
			}
			set
			{
				SetValue("BlockquoteContentID", value);
			}
		}


		/// <summary>
		/// Page Name.
		/// </summary>
		[DatabaseField]
		public string PageName
		{
			get
			{
				return ValidationHelper.GetString(GetValue("PageName"), @"");
			}
			set
			{
				SetValue("PageName", value);
			}
		}


		/// <summary>
		/// Subheading.
		/// </summary>
		[DatabaseField]
		public string Subheading
		{
			get
			{
				return ValidationHelper.GetString(GetValue("Subheading"), @"");
			}
			set
			{
				SetValue("Subheading", value);
			}
		}


		/// <summary>
		/// Desktop banner.
		/// </summary>
		[DatabaseField]
		public Guid DesktopBanner
		{
			get
			{
				return ValidationHelper.GetGuid(GetValue("DesktopBanner"), Guid.Empty);
			}
			set
			{
				SetValue("DesktopBanner", value);
			}
		}


		/// <summary>
		/// Tablet banner.
		/// </summary>
		[DatabaseField]
		public Guid TabletBanner
		{
			get
			{
				return ValidationHelper.GetGuid(GetValue("TabletBanner"), Guid.Empty);
			}
			set
			{
				SetValue("TabletBanner", value);
			}
		}


		/// <summary>
		/// Mobile banner.
		/// </summary>
		[DatabaseField]
		public Guid MobileBanner
		{
			get
			{
				return ValidationHelper.GetGuid(GetValue("MobileBanner"), Guid.Empty);
			}
			set
			{
				SetValue("MobileBanner", value);
			}
		}


		/// <summary>
		/// Page content.
		/// </summary>
		[DatabaseField]
		public string PageContent
		{
			get
			{
				return ValidationHelper.GetString(GetValue("PageContent"), @"");
			}
			set
			{
				SetValue("PageContent", value);
			}
		}


		/// <summary>
		/// Blockquote text.
		/// </summary>
		[DatabaseField]
		public string BlockquoteText
		{
			get
			{
				return ValidationHelper.GetString(GetValue("BlockquoteText"), @"");
			}
			set
			{
				SetValue("BlockquoteText", value);
			}
		}


		/// <summary>
		/// CTA banner.
		/// </summary>
		[DatabaseField]
		public string CTABanner
		{
			get
			{
				return ValidationHelper.GetString(GetValue("CTABanner"), @"");
			}
			set
			{
				SetValue("CTABanner", value);
			}
		}


		/// <summary>
		/// Enable CTA banner?.
		/// </summary>
		[DatabaseField]
		public bool EnableCallToTactionBanner
		{
			get
			{
				return ValidationHelper.GetBoolean(GetValue("EnableCallToTactionBanner"), false);
			}
			set
			{
				SetValue("EnableCallToTactionBanner", value);
			}
		}


		/// <summary>
		/// Enable promotions banner?.
		/// </summary>
		[DatabaseField]
		public bool EnablePromotionsBanner
		{
			get
			{
				return ValidationHelper.GetBoolean(GetValue("EnablePromotionsBanner"), false);
			}
			set
			{
				SetValue("EnablePromotionsBanner", value);
			}
		}


		/// <summary>
		/// Enable Breadcrumb?.
		/// </summary>
		[DatabaseField]
		public bool EnableBreadcrumb
		{
			get
			{
				return ValidationHelper.GetBoolean(GetValue("EnableBreadcrumb"), false);
			}
			set
			{
				SetValue("EnableBreadcrumb", value);
			}
		}


		/// <summary>
		/// Show in header menu.
		/// </summary>
		[DatabaseField]
		public bool AllowToViewInHeader
		{
			get
			{
				return ValidationHelper.GetBoolean(GetValue("AllowToViewInHeader"), true);
			}
			set
			{
				SetValue("AllowToViewInHeader", value);
			}
		}


		/// <summary>
		/// Show in footer menu.
		/// </summary>
		[DatabaseField]
		public bool AllowToViewInFooter
		{
			get
			{
				return ValidationHelper.GetBoolean(GetValue("AllowToViewInFooter"), true);
			}
			set
			{
				SetValue("AllowToViewInFooter", value);
			}
		}


		/// <summary>
		/// Gets an object that provides extended API for working with BlockquoteContent fields.
		/// </summary>
		[RegisterProperty]
		public BlockquoteContentFields Fields
		{
			get
			{
				return mFields;
			}
		}


		/// <summary>
		/// Provides extended API for working with BlockquoteContent fields.
		/// </summary>
		[RegisterAllProperties]
		public partial class BlockquoteContentFields : AbstractHierarchicalObject<BlockquoteContentFields>
		{
			/// <summary>
			/// The content item of type BlockquoteContent that is a target of the extended API.
			/// </summary>
			private readonly BlockquoteContent mInstance;


			/// <summary>
			/// Initializes a new instance of the <see cref="BlockquoteContentFields" /> class with the specified content item of type BlockquoteContent.
			/// </summary>
			/// <param name="instance">The content item of type BlockquoteContent that is a target of the extended API.</param>
			public BlockquoteContentFields(BlockquoteContent instance)
			{
				mInstance = instance;
			}


			/// <summary>
			/// WhyIngramMicroID.
			/// </summary>
			public int ID
			{
				get
				{
					return mInstance.BlockquoteContentID;
				}
				set
				{
					mInstance.BlockquoteContentID = value;
				}
			}


			/// <summary>
			/// Page Name.
			/// </summary>
			public string PageName
			{
				get
				{
					return mInstance.PageName;
				}
				set
				{
					mInstance.PageName = value;
				}
			}


			/// <summary>
			/// Subheading.
			/// </summary>
			public string Subheading
			{
				get
				{
					return mInstance.Subheading;
				}
				set
				{
					mInstance.Subheading = value;
				}
			}


			/// <summary>
			/// Desktop banner.
			/// </summary>
			public DocumentAttachment DesktopBanner
			{
				get
				{
					return mInstance.GetFieldDocumentAttachment("DesktopBanner");
				}
			}


			/// <summary>
			/// Tablet banner.
			/// </summary>
			public DocumentAttachment TabletBanner
			{
				get
				{
					return mInstance.GetFieldDocumentAttachment("TabletBanner");
				}
			}


			/// <summary>
			/// Mobile banner.
			/// </summary>
			public DocumentAttachment MobileBanner
			{
				get
				{
					return mInstance.GetFieldDocumentAttachment("MobileBanner");
				}
			}


			/// <summary>
			/// Page content.
			/// </summary>
			public string PageContent
			{
				get
				{
					return mInstance.PageContent;
				}
				set
				{
					mInstance.PageContent = value;
				}
			}


			/// <summary>
			/// Blockquote text.
			/// </summary>
			public string BlockquoteText
			{
				get
				{
					return mInstance.BlockquoteText;
				}
				set
				{
					mInstance.BlockquoteText = value;
				}
			}


			/// <summary>
			/// CTA banner.
			/// </summary>
			public string CTABanner
			{
				get
				{
					return mInstance.CTABanner;
				}
				set
				{
					mInstance.CTABanner = value;
				}
			}


			/// <summary>
			/// Enable CTA banner?.
			/// </summary>
			public bool EnableCallToTactionBanner
			{
				get
				{
					return mInstance.EnableCallToTactionBanner;
				}
				set
				{
					mInstance.EnableCallToTactionBanner = value;
				}
			}


			/// <summary>
			/// Enable promotions banner?.
			/// </summary>
			public bool EnablePromotionsBanner
			{
				get
				{
					return mInstance.EnablePromotionsBanner;
				}
				set
				{
					mInstance.EnablePromotionsBanner = value;
				}
			}


			/// <summary>
			/// Enable Breadcrumb?.
			/// </summary>
			public bool EnableBreadcrumb
			{
				get
				{
					return mInstance.EnableBreadcrumb;
				}
				set
				{
					mInstance.EnableBreadcrumb = value;
				}
			}


			/// <summary>
			/// Show in header menu.
			/// </summary>
			public bool AllowToViewInHeader
			{
				get
				{
					return mInstance.AllowToViewInHeader;
				}
				set
				{
					mInstance.AllowToViewInHeader = value;
				}
			}


			/// <summary>
			/// Show in footer menu.
			/// </summary>
			public bool AllowToViewInFooter
			{
				get
				{
					return mInstance.AllowToViewInFooter;
				}
				set
				{
					mInstance.AllowToViewInFooter = value;
				}
			}
		}

		#endregion


		#region "Constructors"

		/// <summary>
		/// Initializes a new instance of the <see cref="BlockquoteContent" /> class.
		/// </summary>
		public BlockquoteContent() : base(CLASS_NAME)
		{
			mFields = new BlockquoteContentFields(this);
		}

		#endregion
	}
}